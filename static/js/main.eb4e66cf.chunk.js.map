{"version":3,"sources":["ChessAI/Evaluation.js","ChessAI/BestMove.js","ChessAI/OpeningBook/BlackOpeningBook.js","Application/App.jsx","reportWebVitals.js","index.jsx"],"names":["evaluate","board","evaluation","row","square","color","type","bestMove","chess","depth","moves","sort","Math","random","fen","split","bestAct","bestEvaluation","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","move","undo","console","error","blackOpeningBook","Chess","require","App","useState","setFen","className","turn","game_over","in_checkmate","calcWidth","screenWidth","screenHeight","floor","boardWidth","position","onDrop","length","log","computerMove","handleMove","from","sourceSquare","to","targetSquare","promotion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb4e66cf.chunk.js","sourcesContent":["const evaluate = (board) => {\r\n  let evaluation = 0;\r\n\r\n  for (const row of board) {\r\n    for (const square of row) {\r\n      if (square === null) {\r\n        continue;\r\n      }\r\n      if (square.color === 'w') {\r\n        switch (square.type) {\r\n          case 'r':\r\n            evaluation = evaluation + 500;\r\n            break;\r\n          case 'n':\r\n            evaluation = evaluation + 300;\r\n            break;\r\n          case 'b':\r\n            evaluation = evaluation + 300;\r\n            break;\r\n          case 'q':\r\n            evaluation = evaluation + 900;\r\n            break;\r\n          case 'k':\r\n            evaluation = evaluation + 50000;\r\n            break;\r\n          case 'p':\r\n            evaluation = evaluation + 100;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (square.color === 'b') {\r\n        switch (square.type) {\r\n          case 'r':\r\n            evaluation = evaluation - 500;\r\n            break;\r\n          case 'n':\r\n            evaluation = evaluation - 300;\r\n            break;\r\n          case 'b':\r\n            evaluation = evaluation - 300;\r\n            break;\r\n          case 'q':\r\n            evaluation = evaluation - 900;\r\n            break;\r\n          case 'k':\r\n            evaluation = evaluation - 50000;\r\n            break;\r\n          case 'p':\r\n            evaluation = evaluation - 100;\r\n            break;\r\n          default:\r\n            break;\r\n          }\r\n      }\r\n    }\r\n  }\r\n\r\n  return evaluation;\r\n};\r\n\r\nexport default evaluate;","import evaluate from \"./Evaluation\";\r\n\r\nconst bestMove = (chess, depth) => {\r\n  const moves = chess.moves().sort(() => Math.random() - 0.5);\r\n  const color = chess.fen().split(' ')[1];\r\n\r\n  let bestAct = '';\r\n  let bestEvaluation = color === 'w' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n  let evaluation = 0;\r\n  let _ = {};\r\n\r\n  for (const move of moves) {\r\n    if (depth === 1) {\r\n      chess.move(move);\r\n      evaluation = evaluate(chess.board());\r\n      chess.undo();\r\n    } else if (depth > 1) {\r\n      chess.move(move);\r\n      // eslint-disable-next-line no-unused-vars\r\n      [_, evaluation] = bestMove(chess, depth - 1);\r\n      chess.undo();\r\n    } else {\r\n      console.error('Invalid depth');\r\n    }\r\n\r\n    if (color === 'w') {\r\n      if (evaluation > bestEvaluation) {\r\n        bestEvaluation = evaluation;\r\n        bestAct = move;\r\n      }\r\n    } else if (color === 'b') {\r\n      if (evaluation < bestEvaluation) {\r\n        bestEvaluation = evaluation;\r\n        bestAct = move;\r\n      }\r\n    } else {\r\n      console.error('Invalid color');\r\n    }\r\n  }\r\n\r\n  return [bestAct, bestEvaluation];\r\n};\r\n\r\nexport default bestMove;","export const blackOpeningBook = {\r\n  // first move\r\n  'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1': 'e5', // a\r\n  'rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq d3 0 1': 'd5', // b\r\n  'rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq c3 0 1': 'c5', // c\r\n  'rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R b KQkq - 1 1': 'Nf6', // d\r\n  'rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR b KQkq - 1 1': 'd5', // e\r\n  'rnbqkbnr/pppppppp/8/8/8/6P1/PPPPPP1P/RNBQKBNR b KQkq - 0 1': 'e5', // f\r\n  'rnbqkbnr/pppppppp/8/8/8/1P6/P1PPPPPP/RNBQKBNR b KQkq - 0 1': 'd5', // g\r\n  // second move\r\n  'rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2': 'Nc6', // aa\r\n  'rnbqkbnr/pppp1ppp/8/4p3/4P3/2N5/PPPP1PPP/R1BQKBNR b KQkq - 1 2': 'Nc6', // ab\r\n  'rnbqkbnr/pppp1ppp/8/4p3/2B1P3/8/PPPP1PPP/RNBQK1NR b KQkq - 1 2': 'Nf6', // ac\r\n  'rnbqkbnr/pppp1ppp/8/4p3/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2': 'exd4', // ad\r\n  'rnbqkbnr/pppp1ppp/8/4p3/4PP2/8/PPPP2PP/RNBQKBNR b KQkq f3 0 2': 'exf4', // ae\r\n  'rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq c3 0 2': 'e6', // ba\r\n  'rnbqkbnr/ppp1pppp/8/3p4/3P4/2N5/PPP1PPPP/R1BQKBNR b KQkq - 1 2': 'Nf6', // bb\r\n  'rnbqkbnr/ppp1pppp/8/3p4/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 1 2': 'Nf6', // bc\r\n  'rnbqkbnr/ppp1pppp/8/3p4/3P1B2/8/PPP1PPPP/RN1QKBNR b KQkq - 1 2': 'Nf6', // bd\r\n  'rnbqkbnr/ppp1pppp/8/3p4/3P4/4P3/PPP2PPP/RNBQKBNR b KQkq - 0 2': 'Nf6', // be\r\n  'rnbqkbnr/pp1ppppp/8/2p5/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 1 2': 'g6', // ca\r\n  'rnbqkbnr/pp1ppppp/8/2p5/2P5/6P1/PP1PPP1P/RNBQKBNR b KQkq - 0 2': 'd5', // cb\r\n  'rnbqkb1r/pppppppp/5n2/8/8/5NP1/PPPPPP1P/RNBQKB1R b KQkq - 0 2': 'e6', // da\r\n  'rnbqkb1r/pppppppp/5n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq c3 0 2': 'e6', // db\r\n  'rnbqkbnr/ppp1pppp/8/3p4/4P3/2N5/PPPP1PPP/R1BQKBNR b KQkq e3 0 2': 'd4', // ea\r\n  'rnbqkbnr/ppp1pppp/8/3p4/3P4/2N5/PPP1PPPP/R1BQKBNR b KQkq d3 0 2': 'Nf6', // eb\r\n  'rnbqkbnr/ppp1pppp/8/3p4/8/2N2N2/PPPPPPPP/R1BQKB1R b KQkq - 1 2': 'Nf6', // ec\r\n};\r\n\r\nexport default blackOpeningBook;","import React, {Fragment, useState} from \"react\";\nimport \"./App.css\";\nimport Chessboard from \"chessboardjsx\";\nimport bestMove from \"../ChessAI/BestMove\";\nimport blackOpeningBook from \"../ChessAI/OpeningBook/BlackOpeningBook\";\n\nconst Chess = require(\"chess.js\");\n\nconst App = () => {\n  const [chess] = useState(\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n  );\n  const [fen, setFen] = useState(chess.fen());\n\n  const handleMove = (move) => {\n    if (chess.move(move)) {\n      const moves = chess.moves();\n      if (moves.length > 0) {\n        console.log('fen', chess.fen());\n        if (blackOpeningBook[chess.fen()]) {\n          chess.move(blackOpeningBook[chess.fen()]);\n        } else {\n          // eslint-disable-next-line no-unused-vars\n          const [computerMove, _] = bestMove(chess, 2);\n          chess.move(computerMove);\n        }\n      }\n      setFen(chess.fen());\n    }\n  };\n\n  const boardWidth = (screenWidth, screenHeight) => {\n    if (screenWidth > screenHeight) {\n      return Math.floor(0.75 * screenHeight);\n    } else {\n      return Math.floor(0.75 * screenWidth);\n    }\n  };\n\n  return (\n    <div className=\"Center\">\n      {chess.turn() === \"w\" ? (\n        <Fragment>\n          {chess.game_over() ? (\n            <Fragment>\n              {chess.in_checkmate() ? (\n                <h1>Checkmate. Black wins.</h1>\n              ) : (\n                <h1>Draw</h1>\n              )}\n            </Fragment>\n          ) : (\n            <h1>White's turn</h1>\n          )}\n        </Fragment>\n      ) : (\n        <Fragment>\n          {chess.game_over() ? (\n            <Fragment>\n              {chess.in_checkmate() ? (\n                <h1>Checkmate. White wins.</h1>\n              ) : (\n                <h1>Draw</h1>\n              )}\n            </Fragment>\n          ) : (\n            <h1>Black's turn</h1>\n          )}\n        </Fragment>\n      )}\n      <Chessboard\n        calcWidth={({screenWidth, screenHeight}) =>\n          boardWidth(screenWidth, screenHeight)\n        }\n        position={fen}\n        onDrop={(move) =>\n          handleMove({\n            from: move.sourceSquare,\n            to: move.targetSquare,\n            promotion: \"q\",\n          })\n        }\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Application/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}